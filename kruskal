grafo = {
    "nodoA": [("nodoB", 1), ("nodoC", 2)],
    "nodoB": [("nodoA", 1), ("nodoD", 1), ("nodoC", 3)],
    "nodoC": [("nodoB", 3), ("nodoA", 2), ("nodoD", 2)],
    "nodoD": [("nodoB", 1), ("nodoC", 2)],
}

def kruskal(grafo):
    aristas = []
    for element in grafo:
        for nodo, peso in grafo[element]:
            if (nodo, element, peso) not in aristas:  
                aristas.append((element,nodo , peso))

   
    aristas.sort(key=lambda x: x[2])

    
    conjuntos = {nodo: {nodo} for nodo in grafo}

    
    mst = []
    costo = 0

    
    for salida , llegada peso in aristas:
        
        salidas = None
        llegadas = None

        for conjunto in conjuntos.values():
            if salida  in conjunto:
                salidas = conjunto
            if llegada in conjunto:
                llegadas  = conjunto
                
        if salidas != llegadas:
            mst.append((salida, llegada , peso))
            costo += peso

            
            nuevo_conjunto = salidas.union(llegadas)

            
            for nodo in nuevo_conjunto:
                conjuntos[nodo] = nuevo_conjunto

    return mst, costo



mst, costo = kruskal(grafo)

for salida, llegada, peso in mst:
    print(f"de {u} a  {v} con costo: {peso}")

print(f"Costo de la ruta {costo}")
